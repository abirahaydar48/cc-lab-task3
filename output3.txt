int -> KEYWORD
main -> IDENTIFIER
( -> LPAREN
) -> RPAREN
{ -> LBRACE
double -> KEYWORD
d -> IDENTIFIER
= -> OPERATOR
-1.23e-5 -> NUMBER
; -> SEMICOLON
int -> KEYWORD
i -> IDENTIFIER
= -> OPERATOR
0 -> NUMBER
; -> SEMICOLON
while -> KEYWORD
( -> LPAREN
i -> IDENTIFIER
< -> OPERATOR
3 -> NUMBER
) -> RPAREN
{ -> LBRACE
printf -> IDENTIFIER
( -> LPAREN
"Iteration %d: %e\n" -> STRING_LITERAL
, -> COMMA
i -> IDENTIFIER
+ -> OPERATOR
1 -> NUMBER
, -> COMMA
d -> IDENTIFIER
) -> RPAREN
; -> SEMICOLON
d -> IDENTIFIER
* -> OPERATOR
= -> OPERATOR
2 -> NUMBER
; -> SEMICOLON
i -> IDENTIFIER
++ -> OPERATOR
; -> SEMICOLON
} -> RBRACE
return -> KEYWORD
0 -> NUMBER
; -> SEMICOLON
} -> RBRACE
